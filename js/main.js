// Generated by CoffeeScript 1.10.0
(function() {
  var Echelle, ID, Ilet, base, echelles, ilets, solution,
    indexOf = [].indexOf || function(item) { for (var i = 0, l = this.length; i < l; i++) { if (i in this && this[i] === item) return i; } return -1; };

  if ((base = Array.prototype).shuffle == null) {
    base.shuffle = function() {
      var i, j, k, ref, ref1;
      if (this.length > 1) {
        for (i = k = ref = this.length - 1; ref <= 1 ? k <= 1 : k >= 1; i = ref <= 1 ? ++k : --k) {
          j = Math.floor(Math.random() * (i + 1));
          ref1 = [this[j], this[i]], this[i] = ref1[0], this[j] = ref1[1];
        }
      }
      return this;
    };
  }

  ID = 1;

  solution = [1, 2, 10, 3, 9, 4, 8, 5];

  ilets = solution.slice(0);

  ilets.shuffle();

  echelles = [1, 3, 4, 5, 6, 7, 8];

  Ilet = (function() {
    function Ilet(altitude) {
      this.altitude = altitude;
      this.html = "<div class='spot'>\n    <div class='ilet' data-altitude='" + this.altitude + "'>\n       <span class='info'>" + this.altitude + "</span>       \n    </div>\n    <div class='via' data-denivelle='0'></div>\n</div>";
    }

    return Ilet;

  })();

  Echelle = (function() {
    function Echelle(hauteur) {
      this.hauteur = hauteur;
      this.html = "<div class='echelle' data-hauteur='" + this.hauteur + "'>\n  <span class='info'>" + this.hauteur + "</span>\n</div>";
    }

    return Echelle;

  })();

  $(function() {
    var checkit, draw, go;
    checkit = function() {
      var blues, ech;
      $(".echelle").removeClass("shine-right shine-wrong");
      $(".spot").each(function() {
        var bottom, current_alt, d, echelle, height, next_alt, via;
        via = $(this).find(".via").show();
        if ($(this).next(".spot").length) {
          current_alt = parseInt($(this).find(".ilet").attr("data-altitude"));
          next_alt = parseInt($(this).next(".spot").find(".ilet").attr("data-altitude"));
          d = current_alt - next_alt;
          height = (Math.abs(d)) + "0%";
          if (d > 0) {
            bottom = next_alt + "0%";
          } else {
            bottom = current_alt + "0%";
          }
          via.attr("data-denivelle", d).css({
            'height': height,
            'bottom': bottom,
            'bottom': bottom
          });
          echelle = parseInt(via.find(".echelle").attr("data-hauteur"));
          if (echelle !== Math.abs(current_alt - next_alt)) {
            return via.find(".echelle").addClass("shine-wrong");
          } else {
            return via.find(".echelle").addClass("shine-right");
          }
        }
      });
      $(".spot").last().find(".echelle").appendTo("#echelles");
      $(".spot").last().find(".via").hide();
      blues = $(".shine-right").length;
      ech = $(".echelle").length;
      if (ech === blues) {
        return alert("gagn√© !");
      }
    };
    draw = function() {
      var echelle, height, i, ilet, k, l, len, len1;
      $("#mafate, #echelles").empty();
      for (k = 0, len = ilets.length; k < len; k++) {
        i = ilets[k];
        ilet = new Ilet(i);
        height = 50 * i;
        $("#mafate").append(ilet.html);
        $(".ilet[data-altitude='" + ilet.altitude + "']").css({
          'height': height + "px"
        });
      }
      for (l = 0, len1 = echelles.length; l < len1; l++) {
        i = echelles[l];
        echelle = new Echelle(i);
        height = 50 * i;
        $("#echelles").append(echelle.html);
        $(".echelle[data-hauteur='" + echelle.hauteur + "']").css({
          'height': height + "px"
        });
      }
      $("#mafate").sortable({
        stop: function() {
          return checkit();
        }
      });
      $("#echelles").draggable();
      $(".echelle").draggable();
      return $(".via").droppable({
        tolerance: 'touch',
        accept: '.echelle',
        activeClass: "shine-yellow",
        hoverClass: "shine-white",
        drop: function(event, ui) {
          $(this).append(ui.draggable);
          ui.draggable.css({
            position: 'absolute',
            left: 0,
            bottom: 0,
            top: ''
          });
          return checkit();
        }
      });
    };
    draw();
    checkit();
    go = function() {
      var c, dice, e, elu, i, ilet, index, j, k, l, n, ref, ref1;
      n = parseInt($("#amount-slider").html());
      echelles = [];
      dice = Math.floor(Math.random() * 10) + 1;
      ilets = [dice];
      for (i = k = 0, ref = n - 2; 0 <= ref ? k <= ref : k >= ref; i = 0 <= ref ? ++k : --k) {
        e = [-10, -9, -8, -7, -6, -5, -4, -3, -2, -1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10];
        for (j = l = -10; l <= 10; j = ++l) {
          c = ilets[i] + j;
          if ((j === 0) || (ref1 = Math.abs(j), indexOf.call(echelles, ref1) >= 0) || (c > 10) || (c < 1) || (indexOf.call(ilets, c) >= 0)) {
            index = e.indexOf(j);
            e.splice(index, 1);
          }
        }
        elu = (e.shuffle())[0];
        echelles.push(Math.abs(elu));
        ilet = ilets[i] + elu;
        ilets.push(ilet);
      }
      solution = ilets.slice(0);
      ilets.shuffle();
      echelles.shuffle();
      draw();
      return checkit();
    };
    $("#slider").slider({
      range: "max",
      min: 2,
      max: 10,
      step: 1,
      value: 3,
      slide: function(event, ui) {
        $("#amount-slider").html(ui.value);
        return go();
      }
    });
    $("#amount-slider").html("3");
    $("#random").button().on("click", function() {
      return go();
    });
    return $("#solution").button().on("click", function() {
      ilets = solution;
      draw();
      return checkit();
    });
  });

}).call(this);
