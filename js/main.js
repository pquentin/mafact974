// Generated by CoffeeScript 1.10.0
(function() {
  var ECHELLES, Echelle, ID, ILETS, Ilet, SOLUTION, base,
    indexOf = [].indexOf || function(item) { for (var i = 0, l = this.length; i < l; i++) { if (i in this && this[i] === item) return i; } return -1; };

  if ((base = Array.prototype).shuffle == null) {
    base.shuffle = function() {
      var i, j, l, ref, ref1;
      if (this.length > 1) {
        for (i = l = ref = this.length - 1; ref <= 1 ? l <= 1 : l >= 1; i = ref <= 1 ? ++l : --l) {
          j = Math.floor(Math.random() * (i + 1));
          ref1 = [this[j], this[i]], this[i] = ref1[0], this[j] = ref1[1];
        }
      }
      return this;
    };
  }

  ID = 1;

  SOLUTION = [1, 2, 10, 3, 9, 4, 8, 5];

  ILETS = SOLUTION.slice(0).shuffle();

  ECHELLES = [1, 3, 4, 5, 6, 7, 8];

  Ilet = (function() {
    function Ilet(altitude) {
      this.altitude = altitude;
      this.html = "<div class='spot'>\n    <div class='ilet' data-altitude='" + this.altitude + "'>\n       <span class='info'>" + this.altitude + "</span>       \n    </div>\n    <div class='via' data-denivelle='0'></div>\n</div>";
    }

    return Ilet;

  })();

  Echelle = (function() {
    function Echelle(hauteur) {
      this.hauteur = hauteur;
      this.html = "<div class='echelle' data-hauteur='" + this.hauteur + "'>\n  <span class='info'>" + this.hauteur + "</span>\n</div>";
    }

    return Echelle;

  })();

  $(function() {
    var checkit, draw, go;
    $("#parametres").dialog({
      width: '800px',
      position: {
        my: 'center bottom',
        at: 'center bottom',
        of: window
      }
    });
    $("#param_button").button().on("click", function() {
      return $("#parametres").dialog("open");
    });
    checkit = function() {
      var bleues, scales;
      $(".echelle").removeClass("shine-right shine-wrong");
      $(".spot").each(function() {
        var $next_spot, bottom, curr_alt, deniv, height, next_alt, scale, via;
        $next_spot = $(this).next(".spot");
        via = $(this).find(".via");
        if ($next_spot.length) {
          curr_alt = parseInt($(this).find(".ilet").attr("data-altitude"));
          next_alt = parseInt($next_spot.find(".ilet").attr("data-altitude"));
          deniv = curr_alt - next_alt;
          height = Math.abs(deniv);
          bottom = (deniv > 0 ? next_alt : curr_alt) + "0%";
          via.attr("data-denivelle", deniv).css({
            'height': height + "0%",
            'bottom': bottom
          }).show();
          if (via.find(".echelle").length > 0) {
            scale = parseInt(via.find(".echelle").attr("data-hauteur"));
            console.log(scale, height);
            if (scale === height) {
              return via.find(".echelle").addClass("shine-right");
            } else {
              return via.find(".echelle").addClass("shine-wrong");
            }
          }
        } else {
          scale = via.find(".echelle");
          scale.appendTo("#echelles");
          scale.css({
            position: "relative"
          });
          return via.hide();
        }
      });
      bleues = $(".shine-right").length;
      scales = $(".echelle").length;
      if (bleues === scales) {
        $("#echelles").append("<div id='gagne'>Oté, c'est gagné !</div>");
        return $("body").fireworks();
      }
    };
    draw = function() {
      var echelle, i, ilet, l, len, len1, m;
      $("#mafate, #echelles").empty();
      for (l = 0, len = ILETS.length; l < len; l++) {
        i = ILETS[l];
        ilet = new Ilet(i);
        $("#mafate").append(ilet.html);
        $(".ilet[data-altitude='" + ilet.altitude + "']").css({
          'height': (50 * i) + "px"
        });
      }
      for (m = 0, len1 = ECHELLES.length; m < len1; m++) {
        i = ECHELLES[m];
        echelle = new Echelle(i);
        $("#echelles").append(echelle.html);
        $(".echelle[data-hauteur='" + echelle.hauteur + "']").css({
          'height': (50 * i) + "px"
        });
      }
      $("#mafate").sortable({
        stop: function() {
          return checkit();
        }
      });
      $("#echelles").draggable({
        containment: "body"
      });
      $(".echelle").draggable({
        revert: true
      });
      return $(".via").droppable({
        tolerance: 'touch',
        accept: '.echelle',
        activeClass: "shine-yellow",
        hoverClass: "shine-white",
        drop: function(event, ui) {
          var current_scale;
          current_scale = $(this).find(".echelle");
          if (current_scale.length) {
            $("#echelles").append(current_scale);
            current_scale.css({
              position: "relative"
            });
          }
          $(this).append(ui.draggable);
          ui.draggable.css({
            position: 'absolute',
            left: 0,
            bottom: 0,
            top: ''
          });
          return checkit();
        }
      });
    };
    go = function() {
      var c, e, elu, i, ilet, j, k, l, lop, m, n, ref, ref1, ref2, ref3, ref4;
      n = parseInt($("#amount-slider").html());
      ref = [[], [Math.floor(Math.random() * 10) + 1]], ECHELLES = ref[0], ILETS = ref[1];
      ref1 = [true, 0], lop = ref1[0], k = ref1[1];
      while (lop && (k < 1000)) {
        ref2 = [false, k + 1], lop = ref2[0], k = ref2[1];
        for (i = l = 0, ref3 = n - 2; 0 <= ref3 ? l <= ref3 : l >= ref3; i = 0 <= ref3 ? ++l : --l) {
          e = [];
          for (j = m = -10; m <= 10; j = ++m) {
            c = ILETS[i] + j;
            if (!((j === 0) || (ref4 = Math.abs(j), indexOf.call(ECHELLES, ref4) >= 0) || (indexOf.call([1, 2, 3, 4, 5, 6, 7, 8, 9, 10], c) < 0) || (indexOf.call(ILETS, c) >= 0))) {
              e.push(j);
            }
          }
          if (e.length) {
            elu = (e.shuffle())[0];
            ECHELLES.push(Math.abs(elu));
            ilet = ILETS[i] + elu;
            ILETS.push(ilet);
          } else {
            lop = true;
            break;
          }
        }
      }
      SOLUTION = ILETS.slice(0);
      ILETS.shuffle();
      ECHELLES.shuffle();
      draw();
      return checkit();
    };
    $("#amount-slider").html("7");
    $("#slider").slider({
      range: "max",
      min: 2,
      max: 8,
      step: 1,
      value: 7,
      slide: function(event, ui) {
        $("#amount-slider").html(ui.value);
        return go();
      }
    });
    $("#random").button().on("click", function() {
      $("#gagne").remove();
      $("body").fireworks("destroy");
      return go();
    });
    $("#solution").button().on("click", function() {
      ILETS = SOLUTION;
      draw();
      return checkit();
    });
    return $("#random").trigger("click");
  });

}).call(this);
